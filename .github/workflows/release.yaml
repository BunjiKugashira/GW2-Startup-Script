name: Release CI

on:
  push:
    branches:
      - "develop"
      - "beta"
      - "master"
      - "feature/*"
      - "hotfix/*"
      - "release/*"

jobs:
  release:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    defaults:
      run:
        shell: powershell -Version 4.0 {0}
        working-directory: ./

    steps:
      - uses: actions/checkout@v2

      - name: 'Setup Node'
        uses: actions/setup-node@v1

      - name: 'Build Project'
        run: npm run build

      - name: 'Install CI-Tools'
        run: npm install -g @process-engine/ci_tools@latest

      - name: 'Dry run Prepare Version'
        run: ci_tools prepare-version --allow-dirty-workdir --dry

      - name: 'Prepare Version'
        run: ci_tools prepare-version --allow-dirty-workdir --only-on-primary-branches

      - name: 'Dry run Commit & tag version'
        env:
          GH_USER: ${{ secrets.GH_CI_USER_NAME }}
          GH_TOKEN: ${{ secrets.GH_CI_USER_TOKEN }}
        run: ci_tools commit-and-tag-version --dry

      - name: 'Commit & tag version'
        env:
          GH_USER: ${{ secrets.GH_CI_USER_NAME }}
          GH_TOKEN: ${{ secrets.GH_CI_USER_TOKEN }}
        run: ci_tools commit-and-tag-version --only-on-primary-branches

      - name: 'Setup ps2exe'
        working-directory: ./PS2EXE
        run: Install-Module -Scope CurrentUser -Force ps2exe

      - name: 'Create exe'
        working-directory: ./src
        run: ps2exe -IconFile GW2.ico -InputFile GW2.ps1 -OutputFile "../dist/GW2 Startup Script.exe" -title "GW2 Startup Script" -version ${require('../package.json').version}

      - name: 'Create zip'
        working-directory: ./dist
        run: Compress-Archive "./*" "GW2-Startup-Script.zip"

      - name: 'Dry run Create github release'
        env:
          GH_USER: ${{ secrets.GH_CI_USER_NAME }}
          GH_TOKEN: ${{ secrets.GH_CI_USER_TOKEN }}
        run: |
          ci_tools update-github-release --dry --use-title-and-text-from-git-tag
          ci_tools update-github-release --dry --assets dist/GW2-Startup-Script.zip

      - name: 'Create github release'
        env:
          GH_USER: ${{ secrets.GH_CI_USER_NAME }}
          GH_TOKEN: ${{ secrets.GH_CI_USER_TOKEN }}
        run: |
          ci_tools update-github-release --only-on-primary-branches --use-title-and-text-from-git-tag
          ci_tools update-github-release --only-on-primary-branches --assets dist/GW2-Startup-Script.zip
